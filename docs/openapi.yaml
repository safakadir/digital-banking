openapi: 3.0.3
info:
  title: Digital Banking Platform API
  description: |
    Digital banking platform API for event-driven microservices architecture.
    
    ## Authentication
    All endpoints require AWS Cognito JWT token authentication.
    
    ## Architecture
    This API uses event-driven microservices architecture:
    - **Accounts Service**: Account management
    - **Banking Service**: Deposit and withdrawal operations
    - **Query Service**: Balance and transaction history queries
    
    ## Asynchronous Operations
    Deposit and withdrawal operations are processed asynchronously. Use the `/operation-status/{operation_id}` endpoint to check operation status.
  version: 1.0.0
  contact:
    name: Digital Banking Platform
  license:
    name: MIT

servers:
  - url: https://{api-gateway-url}.execute-api.{region}.amazonaws.com/{stage}
    description: AWS API Gateway
    variables:
      api-gateway-url:
        default: your-api-gateway-id
        description: API Gateway ID
      region:
        default: us-east-1
        description: AWS Region
      stage:
        default: dev
        description: Deployment stage
        enum:
          - dev
          - test
          - prod

security:
  - CognitoAuth: []

paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create new account
      description: Creates a new bank account for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
            example:
              name: "Main Account"
              currency: "TRY"
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - $ref: '#/components/schemas/Account'
              example:
                message: "Account created successfully"
                accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                userId: "us-east-1:12345678-1234-1234-1234-123456789012"
                name: "Main Account"
                currency: "TRY"
                status: "active"
                createdAt: "2024-01-15T10:30:00Z"
                updatedAt: "2024-01-15T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - Accounts
      summary: List all user accounts
      description: Retrieves all accounts for the authenticated user
      responses:
        '200':
          description: Accounts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
              example:
                - accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                  userId: "us-east-1:12345678-1234-1234-1234-123456789012"
                  name: "Main Account"
                  currency: "TRY"
                  status: "active"
                  createdAt: "2024-01-15T10:30:00Z"
                  updatedAt: "2024-01-15T10:30:00Z"
                - accountId: "acc_2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p1a"
                  userId: "us-east-1:12345678-1234-1234-1234-123456789012"
                  name: "USD Account"
                  currency: "USD"
                  status: "active"
                  createdAt: "2024-01-16T14:20:00Z"
                  updatedAt: "2024-01-16T14:20:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{account_id}:
    get:
      tags:
        - Accounts
      summary: Get account details
      description: Retrieves detailed information for the specified account
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: Account details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              example:
                accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                userId: "us-east-1:12345678-1234-1234-1234-123456789012"
                name: "Main Account"
                currency: "TRY"
                status: "active"
                createdAt: "2024-01-15T10:30:00Z"
                updatedAt: "2024-01-15T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{account_id}/close:
    put:
      tags:
        - Accounts
      summary: Close account
      description: Closes the specified account
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: Account closed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      accountId:
                        type: string
              example:
                message: "Account closed successfully"
                accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /deposit:
    post:
      tags:
        - Banking
      summary: Deposit operation
      description: |
        Initiates a deposit operation to the specified account. 
        The operation is processed asynchronously and its status can be tracked using the `/operation-status/{operation_id}` endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
            example:
              accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
              amount: 1000.50
      responses:
        '202':
          description: Deposit operation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationInitiatedResponse'
              example:
                message: "Deposit operation initiated"
                operationId: "op_deposit_1a2b3c4d5e6f7g8h9i0j1k2l"
                status: "pending"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /withdraw:
    post:
      tags:
        - Banking
      summary: Withdrawal operation
      description: |
        Initiates a withdrawal operation from the specified account. 
        The operation is processed asynchronously and its status can be tracked using the `/operation-status/{operation_id}` endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
            example:
              accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
              amount: 500.25
      responses:
        '202':
          description: Withdrawal operation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationInitiatedResponse'
              example:
                message: "Withdraw operation initiated"
                operationId: "op_withdraw_2b3c4d5e6f7g8h9i0j1k2l3m"
                status: "pending"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /operation-status/{operation_id}:
    get:
      tags:
        - Banking
      summary: Get operation status
      description: Retrieves the status of the specified operation
      parameters:
        - $ref: '#/components/parameters/OperationId'
      responses:
        '200':
          description: Operation status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
              example:
                operationId: "op_deposit_1a2b3c4d5e6f7g8h9i0j1k2l"
                accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                type: "deposit"
                amount: 1000.50
                status: "completed"
                createdAt: "2024-01-15T10:30:00Z"
                completedAt: "2024-01-15T10:30:05Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/{account_id}:
    get:
      tags:
        - Query
      summary: Get account transaction history
      description: Retrieves all transaction history for the specified account
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: Transaction history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
              example:
                transactions:
                  - id: "tx_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                    accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                    type: "deposit"
                    amount: 1000.50
                    balance: 1000.50
                    status: "completed"
                    timestamp: "2024-01-15T10:30:00Z"
                    description: "Deposit operation"
                  - id: "tx_2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p1a"
                    accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                    type: "withdraw"
                    amount: 200.00
                    balance: 800.50
                    status: "completed"
                    timestamp: "2024-01-15T14:20:00Z"
                    description: "Withdrawal operation"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /balances/{account_id}:
    get:
      tags:
        - Query
      summary: Get account balance
      description: Retrieves the current balance for the specified account
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: Account balance retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
              example:
                accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                balance: 1250.75
                currency: "TRY"
                lastUpdated: "2024-01-15T14:20:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /balances:
    get:
      tags:
        - Query
      summary: Get all user account balances
      description: Retrieves balances for all accounts of the authenticated user
      responses:
        '200':
          description: Account balances retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceWithAccountInfo'
              example:
                - accountId: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
                  accountName: "Main Account"
                  balance: 1250.75
                  currency: "TRY"
                  lastUpdated: "2024-01-15T14:20:00Z"
                - accountId: "acc_2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p1a"
                  accountName: "USD Account"
                  balance: 500.00
                  currency: "USD"
                  lastUpdated: "2024-01-16T09:15:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    CognitoAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: AWS Cognito JWT Token

  parameters:
    AccountId:
      name: account_id
      in: path
      required: true
      description: Account ID (32-character hex string starting with acc_ prefix)
      schema:
        type: string
        pattern: '^acc_[a-f0-9]{32}$'
        example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"

    OperationId:
      name: operation_id
      in: path
      required: true
      description: Operation ID
      schema:
        type: string
        example: "op_deposit_1a2b3c4d5e6f7g8h9i0j1k2l"

  schemas:
    CreateAccountRequest:
      type: object
      required:
        - name
        - currency
      properties:
        name:
          type: string
          minLength: 3
          description: Account name
          example: "Main Account"
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency (ISO 4217 3-letter code)
          example: "TRY"

    Account:
      type: object
      properties:
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        userId:
          type: string
          description: User ID (Cognito sub)
          example: "us-east-1:12345678-1234-1234-1234-123456789012"
        name:
          type: string
          description: Account name
          example: "Main Account"
        currency:
          type: string
          description: Currency
          example: "TRY"
        status:
          $ref: '#/components/schemas/AccountStatus'
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last updated date
          example: "2024-01-15T10:30:00Z"
        closedAt:
          type: string
          format: date-time
          nullable: true
          description: Closure date
          example: null


    AccountStatus:
      type: string
      enum:
        - active
        - closed
        - suspended
      description: Account status
      example: "active"

    DepositRequest:
      type: object
      required:
        - accountId
        - amount
      properties:
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        amount:
          type: number
          minimum: 0.01
          description: Amount to deposit
          example: 1000.50

    WithdrawRequest:
      type: object
      required:
        - accountId
        - amount
      properties:
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        amount:
          type: number
          minimum: 0.01
          description: Amount to withdraw
          example: 500.25

    OperationInitiatedResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            operationId:
              type: string
              description: Operation ID
              example: "op_deposit_1a2b3c4d5e6f7g8h9i0j1k2l"
            status:
              type: string
              enum: [pending]
              description: Operation status
              example: "pending"

    OperationStatus:
      type: object
      properties:
        operationId:
          type: string
          description: Operation ID
          example: "op_deposit_1a2b3c4d5e6f7g8h9i0j1k2l"
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        type:
          type: string
          enum: [deposit, withdraw]
          description: Operation type
          example: "deposit"
        amount:
          type: number
          description: Operation amount
          example: 1000.50
        status:
          type: string
          enum: [pending, completed, failed]
          description: Operation status
          example: "completed"
        createdAt:
          type: string
          format: date-time
          description: Operation creation date
          example: "2024-01-15T10:30:00Z"
        completedAt:
          type: string
          format: date-time
          nullable: true
          description: Operation completion date
          example: "2024-01-15T10:30:05Z"
        errorMessage:
          type: string
          nullable: true
          description: Error message (when operation fails)
          example: null

    TransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'

    Transaction:
      type: object
      properties:
        id:
          type: string
          description: Operation ID
          example: "tx_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        type:
          type: string
          enum: [deposit, withdraw]
          description: Operation type
          example: "deposit"
        amount:
          type: number
          description: Operation amount
          example: 1000.50
        balance:
          type: number
          description: Balance after transaction
          example: 1000.50
        status:
          type: string
          enum: [completed, failed]
          description: Operation status
          example: "completed"
        timestamp:
          type: string
          format: date-time
          description: Transaction date
          example: "2024-01-15T10:30:00Z"
        description:
          type: string
          description: Transaction description
          example: "Deposit operation"

    Balance:
      type: object
      properties:
        accountId:
          type: string
          pattern: '^acc_[a-f0-9]{32}$'
          description: Account ID
          example: "acc_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p"
        balance:
          type: number
          description: Current balance
          example: 1250.75
        currency:
          type: string
          description: Currency
          example: "TRY"
        lastUpdated:
          type: string
          format: date-time
          description: Last updated date
          example: "2024-01-15T14:20:00Z"

    BalanceWithAccountInfo:
      allOf:
        - $ref: '#/components/schemas/Balance'
        - type: object
          properties:
            accountName:
              type: string
              description: Account name
              example: "Main Account"

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Success message
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"
        code:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-01-15T10:30:00Z"

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Invalid request parameters"
            code: "VALIDATION_ERROR"
            timestamp: "2024-01-15T10:30:00Z"

    Unauthorized:
      description: Invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Unauthorized access"
            code: "UNAUTHORIZED"
            timestamp: "2024-01-15T10:30:00Z"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Resource not found"
            code: "NOT_FOUND"
            timestamp: "2024-01-15T10:30:00Z"

    Conflict:
      description: Business rule violation (e.g., insufficient balance)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Insufficient balance"
            code: "INSUFFICIENT_BALANCE"
            timestamp: "2024-01-15T10:30:00Z"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Internal server error"
            code: "INTERNAL_ERROR"
            timestamp: "2024-01-15T10:30:00Z"

tags:
  - name: Accounts
    description: Account management operations
  - name: Banking
    description: Deposit and withdrawal operations
  - name: Query
    description: Balance and transaction history queries
